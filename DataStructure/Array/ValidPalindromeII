/*
Description: 
Given a string s, return true if the s can be palindrome after deleting at most one character from it.


Example 1:

Input: s = "aba"
Output: true
Example 2:

Input: s = "abca"
Output: true
Explanation: You could delete the character 'c'.
Example 3:

Input: s = "abc"
Output: false

*/

/*
Language used: C#
Algo: 

Create a helper function checkPalindrome that takes a string s, and two pointers( int) i and j. 
This function returns a boolean indicating if s.substring(i, j) is a palindrome. 
checkPalidrome uses the logic I used I used previously 


*/

//Code below: 

public class Solution {
    //public bool ValidPalindrome(string s) {
        private bool checkPali ( string s, int left, int right){
            
            while(left<right){
                if(s[left]!=s[right]){
                    return false;
                }
                
                left++;
                right--;
                
                  
        }
        return true; 
    }
    
    abbba
    left = a
    right = a
    
        
        public bool ValidPalindrome(string s) {
            int i=0; 
            int j=s.Length-1; 
            
            while(i<j){
                
                if(s[i]!=s[j]){
                    return (checkPali ( s, i, j-1)||checkPali ( s, i+1, j));
                }
                i++;
                j--;
            }
            return true;
        }
        
        
}
